{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hickman\\\\Desktop\\\\scrum board\\\\client\\\\src\\\\App.js\";\nimport React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Col, ListGroup, ListGroupItem } from 'reactstrap';\nimport Input from \"reactstrap/es/Input\";\nimport { InputChange } from \"./Utility\";\nimport DatePicker from \"react-datepicker\";\nimport classNames from \"classnames\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      status: {\n        title: 'ali',\n        Description: 'reza'\n      },\n      add: '',\n      listStory: [],\n      listTodo: [],\n      listInProgress: [],\n      listTest: [],\n      listDone: [],\n      startDate: new Date(),\n      bgColor: ''\n    };\n\n    this.handleChange = date => {\n      this.setState({\n        startDate: date\n      });\n    };\n\n    this.toggle = () => this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n\n    this.delStory = index => {\n      this.setState(prevState => {\n        let listStory = prevState.listStory;\n        listStory.splice(index, 1);\n        return {\n          listStory\n        };\n      });\n    };\n\n    this.addToStroy = () => {\n      this.setState(prevState => {\n        let listStory = prevState.listStory,\n            status = prevState.status;\n        let json = JSON.stringify(status);\n        listStory.push(json);\n        return {\n          listStory,\n          status,\n          title: '',\n          Description: '',\n          modal: false\n        };\n      });\n    };\n\n    this.delTodo = index => {\n      this.setState(prevState => {\n        let listTodo = prevState.listTodo;\n        listTodo.splice(index, 1);\n        return {\n          listTodo\n        };\n      });\n    };\n\n    this.addToListTodo = (item1, item2) => {\n      this.setState(prevState => {\n        let listTodo = prevState.listTodo;\n        listTodo.push(item1, item2);\n        return {\n          listTodo\n        };\n      });\n    };\n\n    this.delInProgress = index => {\n      this.setState(prevState => {\n        let listInProgress = prevState.listInProgress;\n        listInProgress.splice(index, 1);\n        return {\n          listInProgress\n        };\n      });\n    };\n\n    this.addToListInprogress = item => {\n      this.setState(prevState => {\n        let listInProgress = prevState.listInProgress;\n        listInProgress.push(item);\n        return {\n          listInProgress\n        };\n      });\n    };\n\n    this.delTest = index => {\n      this.setState(prevState => {\n        let listTest = prevState.listTest;\n        listTest.splice(index, 1);\n        return {\n          listTest\n        };\n      });\n    };\n\n    this.addToListTest = item => {\n      this.setState(prevState => {\n        let listTest = prevState.listTest;\n        listTest.push(item);\n        return {\n          listTest\n        };\n      });\n    };\n\n    this.delDone = index => {\n      this.setState(prevState => {\n        let listDone = prevState.listDone;\n        listDone.splice(index, 1);\n        return {\n          listDone\n        };\n      });\n    };\n\n    this.addToListDone = item => {\n      this.setState(prevState => {\n        let listDone = prevState.listDone;\n        listDone.push(item);\n        return {\n          listDone\n        };\n      });\n    };\n\n    this.changeColor = color => () => {\n      /*let {bgColor} = this.state;\n      if (color === 'red') {\n        this.setState({ bgColor: 'red' });\n      }\n      else if (color === 'green') {\n        this.setState({ bgColor: 'green' });\n      }\n      else if (color === 'yellow') {\n        this.setState({ bgColor: 'yellow' });\n      }\n      else if (color === 'blue') {\n        this.setState({ bgColor: 'blue' });\n      }\n      console.log(bgColor);*/\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          modal = _this$state.modal,\n          listStory = _this$state.listStory,\n          listTodo = _this$state.listTodo,\n          listInProgress = _this$state.listInProgress,\n          listTest = _this$state.listTest,\n          listDone = _this$state.listDone,\n          status = _this$state.status;\n    const _this$state$status = this.state.status,\n          title = _this$state$status.title,\n          Description = _this$state$status.Description;\n    const taskUlClass = classNames('listgroup-fix', 'card'\n    /*,\n    { 'background-red': color === {this.state.bgColor} },\n    { 'background-blue': color === 'blue' },\n    { 'background-yellow': color === 'yellow' },\n    { 'background-green': color === 'green' }*/\n    );\n    return React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"col-md-6\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + '/assets/img/plus.png',\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"inner-text-of-button-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Task\")), React.createElement(Modal, {\n      isOpen: modal,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"modalheader-font-fix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"New Task\")), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"title\",\n      name: \"title\",\n      value: title,\n      onChange: InputChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(Input, {\n      placeholder: \"Description\",\n      name: \"Description\",\n      value: Description,\n      onChange: InputChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(DatePicker, {\n      selected: this.state.startDate,\n      onChange: this.handleChange,\n      monthsShown: 1,\n      inline: true,\n      title: \"Deadline\",\n      placeholderText: \"Deadline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    })), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"fix-box-color\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"danger\",\n      className: \"fix-box-item\",\n      id: \"red\",\n      onClick: this.changeColor('red'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"info\",\n      className: \"fix-box-item\",\n      id: \"blue\",\n      onClick: this.changeColor('blue'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"warning\",\n      className: \"fix-box-item\",\n      id: \"yellow\",\n      onClick: this.changeColor('yellow'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"success\",\n      className: \"fix-box-item\",\n      id: \"green\",\n      onClick: this.changeColor('green'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    })), React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.addToStroy,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Save\")))), React.createElement(\"div\", {\n      className: \"col-md-4 offset-md-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + '/assets/img/group.png',\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"inner-text-of-button-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"User\"))), React.createElement(\"div\", {\n      className: \"col-md-3 offset-md-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"col-md-6\",\n      placeholder: \"Search your task\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-2 border-right border-bottom fix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Story\"), React.createElement(\"div\", {\n      className: \"col-md-2 border-right border-bottom fix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"ToDo\"), React.createElement(\"div\", {\n      className: \"col-md-4 border-right border-bottom fix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"In Progress\"), React.createElement(\"div\", {\n      className: \"col-md-2 border-right border-bottom fix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"Test\"), React.createElement(\"div\", {\n      className: \"col-md-2 border-bottom fix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"Done\")), React.createElement(\"div\", {\n      className: \"row full-height\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-2 border-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      className: \"mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, listStory.length !== 0 ? listStory.map((item, index) => {\n      return React.createElement(ListGroupItem, {\n        key: index,\n        className: taskUlClass,\n        style: {\n          backgroundColor: this.state.bgColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, JSON.parse(item).title), React.createElement(\"button\", {\n        onClick: this.delStory.bind(this, index),\n        className: \"float-right li-button-fix\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: process.env.PUBLIC_URL + '/assets/img/cancel.png',\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: this.addToListTodo.bind(this, item),\n        className: \"float-right li-button-fix\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: process.env.PUBLIC_URL + '/assets/img/check.png',\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, JSON.parse(item).Description)));\n    }) : console.log('Empty Task')))), React.createElement(\"div\", {\n      className: \"col-md-2 border-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      className: \"mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, listTodo.length !== 0 ? listTodo.map((item, index) => {\n      return React.createElement(ListGroupItem, {\n        key: index,\n        className: taskUlClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, item), React.createElement(\"button\", {\n        onClick: this.delTodo.bind(this, index),\n        className: \"float-right li-button-fix\",\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: process.env.PUBLIC_URL + '/assets/img/cancel.png',\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: this.addToListInprogress.bind(this, item),\n        className: \"float-right li-button-fix\",\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: process.env.PUBLIC_URL + '/assets/img/check.png',\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, status[index]));\n    }) : console.log('Empty Task')))), React.createElement(\"div\", {\n      className: \"col-md-4 border-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      className: \"mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, listInProgress.length !== 0 ? listInProgress.map((item, index) => {\n      return React.createElement(ListGroupItem, {\n        key: index,\n        className: taskUlClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, item), React.createElement(\"button\", {\n        onClick: this.delInProgress.bind(this, index),\n        className: \"float-right li-button-fix\",\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: process.env.PUBLIC_URL + '/assets/img/cancel.png',\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: this.addToListTest.bind(this, item),\n        className: \"float-right li-button-fix\",\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: process.env.PUBLIC_URL + '/assets/img/check.png',\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, status[index]));\n    }) : console.log('Empty Task')))), React.createElement(\"div\", {\n      className: \"col-md-2 border-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      className: \"mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, listTest.length !== 0 ? listTest.map((item, index) => {\n      return React.createElement(ListGroupItem, {\n        key: index,\n        className: taskUlClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, item), React.createElement(\"button\", {\n        onClick: this.delTest.bind(this, index),\n        className: \"float-right li-button-fix\",\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: process.env.PUBLIC_URL + '/assets/img/cancel.png',\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: this.addToListDone.bind(this, item),\n        className: \"float-right li-button-fix\",\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: process.env.PUBLIC_URL + '/assets/img/check.png',\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, status[index]));\n    }) : console.log('Empty Task')))), React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      className: \"mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, listDone.length !== 0 ? listDone.map((item, index) => {\n      return React.createElement(ListGroupItem, {\n        key: index,\n        className: taskUlClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, item), React.createElement(\"button\", {\n        onClick: this.delDone.bind(this, index),\n        className: \"float-right li-button-fix\",\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: process.env.PUBLIC_URL + '/assets/img/cancel.png',\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: this.addToListDone.bind(this, item),\n        className: \"float-right li-button-fix\",\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: process.env.PUBLIC_URL + '/assets/img/check.png',\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, status[index]));\n    }) : console.log('Empty Task'))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Hickman\\Desktop\\scrum board\\client\\src\\App.js"],"names":["React","Button","Modal","ModalHeader","ModalBody","ModalFooter","Col","ListGroup","ListGroupItem","Input","InputChange","DatePicker","classNames","App","Component","state","modal","status","title","Description","add","listStory","listTodo","listInProgress","listTest","listDone","startDate","Date","bgColor","handleChange","date","setState","toggle","prevState","delStory","index","splice","addToStroy","json","JSON","stringify","push","delTodo","addToListTodo","item1","item2","delInProgress","addToListInprogress","item","delTest","addToListTest","delDone","addToListDone","changeColor","color","render","taskUlClass","process","env","PUBLIC_URL","bind","length","map","backgroundColor","parse","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Col, ListGroup, ListGroupItem } from 'reactstrap';\nimport Input from \"reactstrap/es/Input\";\nimport { InputChange } from \"./Utility\";\nimport DatePicker from \"react-datepicker\";\nimport classNames from \"classnames\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './App.css';\n\nclass App extends React.Component {\n\n  state = {\n    modal: false,\n    status: {\n      title: 'ali',\n      Description: 'reza'\n    },\n    add: '',\n    listStory: [],\n    listTodo: [],\n    listInProgress: [],\n    listTest: [],\n    listDone: [],\n    startDate: new Date(),\n    bgColor: ''\n  };\n\n  handleChange = date => {\n    this.setState({\n      startDate: date\n    });\n  };\n\n  toggle = () => this.setState(prevState => ({ modal: !prevState.modal }));\n\n  delStory = index => {\n    this.setState(prevState => {\n      let { listStory } = prevState;\n      listStory.splice(index, 1);\n      return {\n        listStory\n      };\n    });\n  };\n\n  addToStroy = () => {\n    this.setState(prevState => {\n      let { listStory, status } = prevState;\n      let json = JSON.stringify(status);\n      listStory.push(json);\n      return { listStory, status, title: '', Description: '', modal: false };\n    });\n  };\n\n  delTodo = index => {\n    this.setState(prevState => {\n      let { listTodo } = prevState;\n      listTodo.splice(index, 1);\n      return {\n        listTodo\n      };\n    });\n  };\n\n  addToListTodo = (item1, item2) => {\n    this.setState(prevState => {\n      let { listTodo } = prevState;\n      listTodo.push(item1, item2);\n      return { listTodo };\n    });\n  };\n\n  delInProgress = index => {\n    this.setState(prevState => {\n      let { listInProgress } = prevState;\n      listInProgress.splice(index, 1);\n      return {\n        listInProgress\n      };\n    });\n  };\n\n  addToListInprogress = item => {\n    this.setState(prevState => {\n      let { listInProgress } = prevState;\n      listInProgress.push(item);\n      return { listInProgress };\n    });\n  };\n\n  delTest = index => {\n    this.setState(prevState => {\n      let { listTest } = prevState;\n      listTest.splice(index, 1);\n      return {\n        listTest\n      };\n    });\n  };\n\n  addToListTest = item => {\n    this.setState(prevState => {\n      let { listTest } = prevState;\n      listTest.push(item);\n      return { listTest };\n    });\n  };\n\n  delDone = index => {\n    this.setState(prevState => {\n      let { listDone } = prevState;\n      listDone.splice(index, 1);\n      return {\n        listDone\n      };\n    });\n  };\n\n  addToListDone = item => {\n    this.setState(prevState => {\n      let { listDone } = prevState;\n      listDone.push(item);\n      return { listDone };\n    });\n  };\n\n  changeColor = (color) => () => {\n    /*let {bgColor} = this.state;\n    if (color === 'red') {\n      this.setState({ bgColor: 'red' });\n    }\n    else if (color === 'green') {\n      this.setState({ bgColor: 'green' });\n    }\n    else if (color === 'yellow') {\n      this.setState({ bgColor: 'yellow' });\n    }\n    else if (color === 'blue') {\n      this.setState({ bgColor: 'blue' });\n    }\n    console.log(bgColor);*/\n  };\n\n  render() {\n    const { modal, listStory, listTodo, listInProgress, listTest, listDone, status } = this.state;\n    const { title, Description } = this.state.status;\n\n    const taskUlClass = classNames('listgroup-fix', 'card'/*,\n      { 'background-red': color === {this.state.bgColor} },\n      { 'background-blue': color === 'blue' },\n      { 'background-yellow': color === 'yellow' },\n      { 'background-green': color === 'green' }*/);\n    return (\n      <div className=\"container-fluid\">\n        <div className='row'>\n          <header className='col-md-12'>\n            <div className='col-md-3'>\n              <button className='col-md-6' onClick={this.toggle}>\n                <img src={process.env.PUBLIC_URL + '/assets/img/plus.png'} alt='' />\n                <div className='inner-text-of-button-header'>Task</div>\n              </button>\n\n              <Modal isOpen={modal} toggle={this.toggle}>\n                <ModalHeader toggle={this.toggle}>\n                  <p className='modalheader-font-fix'>New Task</p>\n                </ModalHeader>\n                <ModalBody>\n                  <Input placeholder='title' name='title' value={title} onChange={InputChange.bind(this)} />\n                  <Input placeholder='Description' name='Description' value={Description} onChange={InputChange.bind(this)} />\n                  <DatePicker\n                    selected={this.state.startDate}\n                    onChange={this.handleChange}\n                    monthsShown={1}\n                    inline\n                    title='Deadline'\n                    placeholderText='Deadline'\n                  />\n                </ModalBody>\n                <ModalFooter>\n                  <div className='fix-box-color'>\n                    <Button color='danger' className='fix-box-item' id='red' onClick={this.changeColor('red')} />\n                    <Button color='info' className='fix-box-item' id='blue' onClick={this.changeColor('blue')} />\n                    <Button color='warning' className='fix-box-item' id='yellow' onClick={this.changeColor('yellow')} />\n                    <Button color='success' className='fix-box-item' id='green' onClick={this.changeColor('green')} />\n                  </div>\n                  {/* <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button> */}\n                  <Button color=\"primary\" onClick={this.addToStroy}>Save</Button>\n                </ModalFooter>\n              </Modal>\n\n\n            </div>\n\n            <div className='col-md-4 offset-md-1'>\n              <button className='col-md-6'>\n                <img src={process.env.PUBLIC_URL + '/assets/img/group.png'} alt='' />\n                <div className='inner-text-of-button-header'>User</div>\n              </button>\n            </div>\n\n            <div className='col-md-3 offset-md-1'>\n              <input className='col-md-6' placeholder='Search your task' />\n            </div>\n          </header>\n        </div>\n\n        <div className='row'>\n          <div className='col-md-2 border-right border-bottom fix'>\n            Story\n          </div>\n          <div className='col-md-2 border-right border-bottom fix'>\n            ToDo\n          </div>\n          <div className='col-md-4 border-right border-bottom fix'>\n            In Progress\n          </div>\n          <div className='col-md-2 border-right border-bottom fix'>\n            Test\n          </div>\n          <div className='col-md-2 border-bottom fix'>\n            Done\n          </div>\n        </div>\n\n        <div className='row full-height'>\n          {/* Story List */}\n          <div className='col-md-2 border-right'>\n            <Col md={12} className='mt-4'>\n              <ListGroup>\n                {\n                  listStory.length !== 0 ?\n                    listStory.map((item, index) => {\n                      return (\n                        <ListGroupItem key={index} className={taskUlClass} style={{ backgroundColor: this.state.bgColor }}>\n                          <header className='col-md-12'>\n                            <p>{JSON.parse(item).title}</p>\n                            <button\n                              onClick={this.delStory.bind(this, index)}\n                              className='float-right li-button-fix'\n                            >\n                              <img src={process.env.PUBLIC_URL + '/assets/img/cancel.png'} alt='' />\n                            </button>\n                            <button\n                              onClick={this.addToListTodo.bind(this, item)}\n                              className='float-right li-button-fix'\n                            >\n                              <img src={process.env.PUBLIC_URL + '/assets/img/check.png'} alt='' />\n                            </button>\n                          </header>\n                          <Col xs={12}>\n                            <p>{JSON.parse(item).Description}</p>\n                          </Col>\n                        </ListGroupItem>\n                      )\n                    })\n                    :\n                    (\n                      console.log('Empty Task')\n                    )\n                }\n              </ListGroup>\n            </Col>\n          </div>\n          <div className='col-md-2 border-right'>\n            <Col md={12} className='mt-4'>\n              <ListGroup>\n                {\n                  listTodo.length !== 0 ?\n                    listTodo.map((item, index) => {\n                      return (\n                        <ListGroupItem key={index} className={taskUlClass}>\n                          <header className='col-md-12'>\n                            <p>{item}</p>\n                            <button\n                              onClick={this.delTodo.bind(this, index)}\n                              className='float-right li-button-fix'\n                              color='danger'\n                            >\n                              <img src={process.env.PUBLIC_URL + '/assets/img/cancel.png'} alt='' />\n                            </button>\n                            <button\n                              onClick={this.addToListInprogress.bind(this, item)}\n                              className='float-right li-button-fix'\n                              color='danger'\n                            >\n                              <img src={process.env.PUBLIC_URL + '/assets/img/check.png'} alt='' />\n                            </button>\n                          </header>\n                          <Col xs={12}>\n                            {\n                              status[index]\n                            }\n                          </Col>\n                        </ListGroupItem>\n                      )\n                    })\n                    :\n                    (\n                      console.log('Empty Task')\n                    )\n                }\n              </ListGroup>\n            </Col>\n          </div>\n          <div className='col-md-4 border-right'>\n            <Col md={12} className='mt-4'>\n              <ListGroup>\n                {\n                  listInProgress.length !== 0 ?\n                    listInProgress.map((item, index) => {\n                      return (\n                        <ListGroupItem key={index} className={taskUlClass}>\n                          <header className='col-md-12'>\n                            <p>{item}</p>\n                            <button\n                              onClick={this.delInProgress.bind(this, index)}\n                              className='float-right li-button-fix'\n                              color='danger'\n                            >\n                              <img src={process.env.PUBLIC_URL + '/assets/img/cancel.png'} alt='' />\n                            </button>\n                            <button\n                              onClick={this.addToListTest.bind(this, item)}\n                              className='float-right li-button-fix'\n                              color='danger'\n                            >\n                              <img src={process.env.PUBLIC_URL + '/assets/img/check.png'} alt='' />\n                            </button>\n                          </header>\n                          <Col xs={12}>\n                            {\n                              status[index]\n                            }\n                          </Col>\n                        </ListGroupItem>\n                      )\n                    })\n                    :\n                    (\n                      console.log('Empty Task')\n                    )\n                }\n              </ListGroup>\n            </Col>\n          </div>\n          <div className='col-md-2 border-right'>\n            <Col md={12} className='mt-4'>\n              <ListGroup>\n                {\n                  listTest.length !== 0 ?\n                    listTest.map((item, index) => {\n                      return (\n                        <ListGroupItem key={index} className={taskUlClass}>\n                          <header className='col-md-12'>\n                            <p>{item}</p>\n                            <button\n                              onClick={this.delTest.bind(this, index)}\n                              className='float-right li-button-fix'\n                              color='danger'\n                            >\n                              <img src={process.env.PUBLIC_URL + '/assets/img/cancel.png'} alt='' />\n                            </button>\n                            <button\n                              onClick={this.addToListDone.bind(this, item)}\n                              className='float-right li-button-fix'\n                              color='danger'\n                            >\n                              <img src={process.env.PUBLIC_URL + '/assets/img/check.png'} alt='' />\n                            </button>\n                          </header>\n                          <Col xs={12}>\n                            {\n                              status[index]\n                            }\n                          </Col>\n                        </ListGroupItem>\n                      )\n                    })\n                    :\n                    (\n                      console.log('Empty Task')\n                    )\n                }\n              </ListGroup>\n            </Col>\n          </div>\n          <div className='col-md-2'>\n            <Col md={12} className='mt-4'>\n              <ListGroup>\n                {\n                  listDone.length !== 0 ?\n                    listDone.map((item, index) => {\n                      return (\n                        <ListGroupItem key={index} className={taskUlClass}>\n                          <header className='col-md-12'>\n                            <p>{item}</p>\n                            <button\n                              onClick={this.delDone.bind(this, index)}\n                              className='float-right li-button-fix'\n                              color='danger'\n                            >\n                              <img src={process.env.PUBLIC_URL + '/assets/img/cancel.png'} alt='' />\n                            </button>\n                            <button\n                              onClick={this.addToListDone.bind(this, item)}\n                              className='float-right li-button-fix'\n                              color='danger'\n                            >\n                              <img src={process.env.PUBLIC_URL + '/assets/img/check.png'} alt='' />\n                            </button>\n                          </header>\n                          <Col xs={12}>\n                            {\n                              status[index]\n                            }\n                          </Col>\n                        </ListGroupItem>\n                      )\n                    })\n                    :\n                    (\n                      console.log('Empty Task')\n                    )\n                }\n              </ListGroup>\n            </Col>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}