{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Hickman\\\\Desktop\\\\scrum board\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hickman\\\\Desktop\\\\scrum board\\\\client\\\\src\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Col, ListGroup, ListGroupItem } from 'reactstrap';\nimport Input from \"reactstrap/es/Input\";\nimport { InputChange } from \"./Utility\";\nimport DatePicker from \"react-datepicker\";\nimport classNames from \"classnames\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      status: {\n        title: '',\n        Description: ''\n      },\n      add: '',\n      listStory: [],\n      listTodo: [],\n      listInProgress: [],\n      listTest: [],\n      listDone: [],\n      startDate: new Date(),\n      bgColor: ''\n    };\n\n    this.changeInput = e => {\n      const _this$state = _objectSpread({}, this.state),\n            status = _this$state.status;\n\n      const currentState = status;\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      currentState[name] = value;\n      this.setState({\n        status: currentState\n      });\n    };\n\n    this.handleChange = date => {\n      this.setState({\n        startDate: date\n      });\n    };\n\n    this.toggle = () => this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n\n    this.delStory = index => {\n      this.setState(prevState => {\n        let listStory = prevState.listStory;\n        listStory.splice(index, 1);\n        return {\n          listStory\n        };\n      });\n    };\n\n    this.addToStroy = () => {\n      this.setState(prevState => {\n        let listStory = prevState.listStory,\n            status = prevState.status;\n        let json = JSON.stringify(status);\n        listStory.push(json);\n        return {\n          listStory,\n          status,\n          statitle: '',\n          Description: '',\n          modal: false\n        };\n      });\n    };\n\n    this.delTodo = index => {\n      this.setState(prevState => {\n        let listTodo = prevState.listTodo;\n        listTodo.splice(index, 1);\n        return {\n          listTodo\n        };\n      });\n    };\n\n    this.addToListTodo = item => {\n      this.setState(prevState => {\n        let listTodo = prevState.listTodo;\n        listTodo.push(item);\n        return {\n          listTodo\n        };\n      });\n    };\n\n    this.delInProgress = index => {\n      this.setState(prevState => {\n        let listInProgress = prevState.listInProgress;\n        listInProgress.splice(index, 1);\n        return {\n          listInProgress\n        };\n      });\n    };\n\n    this.addToListInprogress = item => {\n      this.setState(prevState => {\n        let listInProgress = prevState.listInProgress;\n        listInProgress.push(item);\n        return {\n          listInProgress\n        };\n      });\n    };\n\n    this.delTest = index => {\n      this.setState(prevState => {\n        let listTest = prevState.listTest;\n        listTest.splice(index, 1);\n        return {\n          listTest\n        };\n      });\n    };\n\n    this.addToListTest = item => {\n      this.setState(prevState => {\n        let listTest = prevState.listTest;\n        listTest.push(item);\n        return {\n          listTest\n        };\n      });\n    };\n\n    this.delDone = index => {\n      this.setState(prevState => {\n        let listDone = prevState.listDone;\n        listDone.splice(index, 1);\n        return {\n          listDone\n        };\n      });\n    };\n\n    this.addToListDone = item => {\n      this.setState(prevState => {\n        let listDone = prevState.listDone;\n        listDone.push(item);\n        return {\n          listDone\n        };\n      });\n    };\n\n    this.changeColor = color => () => {\n      this.setState({\n        color\n      });\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          modal = _this$state2.modal,\n          listStory = _this$state2.listStory,\n          listTodo = _this$state2.listTodo,\n          listInProgress = _this$state2.listInProgress,\n          listTest = _this$state2.listTest,\n          listDone = _this$state2.listDone,\n          color = _this$state2.color;\n    const _this$state$status = this.state.status,\n          title = _this$state$status.title,\n          Description = _this$state$status.Description;\n    const taskUlClass = classNames('listgroup-fix', 'card', {\n      'background-red': color === 'red'\n    }, {\n      'background-blue': color === 'blue'\n    }, {\n      'background-yellow': color === 'yellow'\n    }, {\n      'background-green': color === 'green'\n    });\n    return React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"col-md-6\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + '/assets/img/plus.png',\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"inner-text-of-button-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Task\")), React.createElement(Modal, {\n      isOpen: modal,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"modalheader-font-fix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"New Task\")), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"title\",\n      name: \"title\",\n      value: title,\n      onChange: this.changeInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(Input, {\n      placeholder: \"Description\",\n      name: \"Description\",\n      value: Description,\n      onChange: this.changeInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(DatePicker, {\n      selected: this.state.startDate,\n      onChange: this.handleChange,\n      monthsShown: 1,\n      inline: true,\n      title: \"Deadline\",\n      placeholderText: \"Deadline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"fix-box-color\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"danger\",\n      className: \"fix-box-item\",\n      id: \"red\",\n      onClick: this.changeColor('red'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"info\",\n      className: \"fix-box-item\",\n      id: \"blue\",\n      onClick: this.changeColor('blue'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"warning\",\n      className: \"fix-box-item\",\n      id: \"yellow\",\n      onClick: this.changeColor('yellow'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"success\",\n      className: \"fix-box-item\",\n      id: \"green\",\n      onClick: this.changeColor('green'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    })), React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.addToStroy,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Save\")))), React.createElement(\"div\", {\n      className: \"col-md-4 offset-md-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + '/assets/img/group.png',\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"inner-text-of-button-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"User\"))), React.createElement(\"div\", {\n      className: \"col-md-3 offset-md-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"col-md-6\",\n      placeholder: \"Search your task\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-2 border-right border-bottom fix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Story\"), React.createElement(\"div\", {\n      className: \"col-md-2 border-right border-bottom fix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"ToDo\"), React.createElement(\"div\", {\n      className: \"col-md-4 border-right border-bottom fix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"In Progress\"), React.createElement(\"div\", {\n      className: \"col-md-2 border-right border-bottom fix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"Test\"), React.createElement(\"div\", {\n      className: \"col-md-2 border-bottom fix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Done\")), React.createElement(\"div\", {\n      className: \"row full-height\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-2 border-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      className: \"mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, listStory.length !== 0 ? listStory.map((item, index) => {\n      return React.createElement(ListGroupItem, {\n        key: index,\n        className: taskUlClass,\n        style: {\n          backgroundColor: this.state.bgColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, JSON.parse(item).title), React.createElement(\"button\", {\n        onClick: this.delStory.bind(this, index),\n        className: \"float-right li-button-fix\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: process.env.PUBLIC_URL + '/assets/img/cancel.png',\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: this.addToListTodo.bind(this, item),\n        className: \"float-right li-button-fix\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: process.env.PUBLIC_URL + '/assets/img/check.png',\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, JSON.parse(item).Description)));\n    }) : console.log('Empty Task')))), React.createElement(\"div\", {\n      className: \"col-md-2 border-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      className: \"mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, listTodo.length !== 0 ? listTodo.map((item, index) => {\n      return React.createElement(ListGroupItem, {\n        key: index,\n        className: taskUlClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, JSON.parse(item).title), React.createElement(\"button\", {\n        onClick: this.delTodo.bind(this, index),\n        className: \"float-right li-button-fix\",\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: process.env.PUBLIC_URL + '/assets/img/cancel.png',\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: this.addToListInprogress.bind(this, item),\n        className: \"float-right li-button-fix\",\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: process.env.PUBLIC_URL + '/assets/img/check.png',\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, JSON.parse(item).Description)));\n    }) : console.log('Empty Task')))), React.createElement(\"div\", {\n      className: \"col-md-4 border-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      className: \"mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, listInProgress.length !== 0 ? listInProgress.map((item, index) => {\n      return React.createElement(ListGroupItem, {\n        key: index,\n        className: taskUlClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, JSON.parse(item).title), React.createElement(\"button\", {\n        onClick: this.delInProgress.bind(this, index),\n        className: \"float-right li-button-fix\",\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: process.env.PUBLIC_URL + '/assets/img/cancel.png',\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: this.addToListTest.bind(this, item),\n        className: \"float-right li-button-fix\",\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: process.env.PUBLIC_URL + '/assets/img/check.png',\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, JSON.parse(item).Description)));\n    }) : console.log('Empty Task')))), React.createElement(\"div\", {\n      className: \"col-md-2 border-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      className: \"mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, listTest.length !== 0 ? listTest.map((item, index) => {\n      return React.createElement(ListGroupItem, {\n        key: index,\n        className: taskUlClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, JSON.parse(item).title), React.createElement(\"button\", {\n        onClick: this.delTest.bind(this, index),\n        className: \"float-right li-button-fix\",\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: process.env.PUBLIC_URL + '/assets/img/cancel.png',\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: this.addToListDone.bind(this, item),\n        className: \"float-right li-button-fix\",\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: process.env.PUBLIC_URL + '/assets/img/check.png',\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, JSON.parse(item).Description)));\n    }) : console.log('Empty Task')))), React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      className: \"mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, listDone.length !== 0 ? listDone.map((item, index) => {\n      return React.createElement(ListGroupItem, {\n        key: index,\n        className: taskUlClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, JSON.parse(item).title), React.createElement(\"button\", {\n        onClick: this.delDone.bind(this, index),\n        className: \"float-right li-button-fix\",\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: process.env.PUBLIC_URL + '/assets/img/cancel.png',\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: this.addToListDone.bind(this, item),\n        className: \"float-right li-button-fix\",\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: process.env.PUBLIC_URL + '/assets/img/check.png',\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, JSON.parse(item).Description)));\n    }) : console.log('Empty Task'))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Hickman\\Desktop\\scrum board\\client\\src\\App.js"],"names":["React","Button","Modal","ModalHeader","ModalBody","ModalFooter","Col","ListGroup","ListGroupItem","Input","InputChange","DatePicker","classNames","App","Component","state","modal","status","title","Description","add","listStory","listTodo","listInProgress","listTest","listDone","startDate","Date","bgColor","changeInput","e","currentState","target","name","value","setState","handleChange","date","toggle","prevState","delStory","index","splice","addToStroy","json","JSON","stringify","push","statitle","delTodo","addToListTodo","item","delInProgress","addToListInprogress","delTest","addToListTest","delDone","addToListDone","changeColor","color","render","taskUlClass","process","env","PUBLIC_URL","length","map","backgroundColor","parse","bind","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Col, ListGroup, ListGroupItem } from 'reactstrap';\nimport Input from \"reactstrap/es/Input\";\nimport { InputChange } from \"./Utility\";\nimport DatePicker from \"react-datepicker\";\nimport classNames from \"classnames\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './App.css';\n\nclass App extends React.Component {\n\n  state = {\n    modal: false,\n    status: {\n      title: '',\n      Description: ''\n    },\n    add: '',\n    listStory: [],\n    listTodo: [],\n    listInProgress: [],\n    listTest: [],\n    listDone: [],\n    startDate: new Date(),\n    bgColor: ''\n  };\n\n  changeInput = e => {\n    const { status } = { ...this.state };\n    const currentState = status;\n    const { name, value } = e.target;\n    currentState[name] = value;\n\n    this.setState({ status: currentState });\n  }\n\n  handleChange = date => {\n    this.setState({\n      startDate: date\n    });\n  };\n\n  toggle = () => this.setState(prevState => ({ modal: !prevState.modal }));\n\n  delStory = index => {\n    this.setState(prevState => {\n      let { listStory } = prevState;\n      listStory.splice(index, 1);\n      return {\n        listStory\n      };\n    });\n  };\n\n  addToStroy = () => {\n    this.setState(prevState => {\n      let { listStory, status } = prevState;\n      let json = JSON.stringify(status);\n      listStory.push(json);\n      return { listStory, status, statitle: '', Description: '', modal: false };\n    });\n  };\n\n  delTodo = index => {\n    this.setState(prevState => {\n      let { listTodo } = prevState;\n      listTodo.splice(index, 1);\n      return {\n        listTodo\n      };\n    });\n  };\n\n  addToListTodo = item => {\n    this.setState(prevState => {\n      let { listTodo } = prevState;\n      listTodo.push(item);\n      return { listTodo };\n    });\n  };\n\n  delInProgress = index => {\n    this.setState(prevState => {\n      let { listInProgress } = prevState;\n      listInProgress.splice(index, 1);\n      return {\n        listInProgress\n      };\n    });\n  };\n\n  addToListInprogress = item => {\n    this.setState(prevState => {\n      let { listInProgress } = prevState;\n      listInProgress.push(item);\n      return { listInProgress };\n    });\n  };\n\n  delTest = index => {\n    this.setState(prevState => {\n      let { listTest } = prevState;\n      listTest.splice(index, 1);\n      return {\n        listTest\n      };\n    });\n  };\n\n  addToListTest = item => {\n    this.setState(prevState => {\n      let { listTest } = prevState;\n      listTest.push(item);\n      return { listTest };\n    });\n  };\n\n  delDone = index => {\n    this.setState(prevState => {\n      let { listDone } = prevState;\n      listDone.splice(index, 1);\n      return {\n        listDone\n      };\n    });\n  };\n\n  addToListDone = item => {\n    this.setState(prevState => {\n      let { listDone } = prevState;\n      listDone.push(item);\n      return { listDone };\n    });\n  };\n\n  changeColor = (color) => () => {\n    this.setState({ color });\n  };\n\n  render() {\n    const { modal, listStory, listTodo, listInProgress, listTest, listDone, color } = this.state;\n    const { title, Description } = this.state.status;\n\n    const taskUlClass = classNames('listgroup-fix', 'card',\n      { 'background-red': color === 'red' },\n      { 'background-blue': color === 'blue' },\n      { 'background-yellow': color === 'yellow' },\n      { 'background-green': color === 'green' });\n    return (\n      <div className=\"container-fluid\">\n        <div className='row'>\n          <header className='col-md-12'>\n            <div className='col-md-3'>\n              <button className='col-md-6' onClick={this.toggle}>\n                <img src={process.env.PUBLIC_URL + '/assets/img/plus.png'} alt='' />\n                <div className='inner-text-of-button-header'>Task</div>\n              </button>\n\n              <Modal isOpen={modal} toggle={this.toggle}>\n                <ModalHeader toggle={this.toggle}>\n                  <p className='modalheader-font-fix'>New Task</p>\n                </ModalHeader>\n                <ModalBody>\n                  <Input placeholder='title' name='title' value={title} onChange={this.changeInput} />\n                  <Input placeholder='Description' name='Description' value={Description} onChange={this.changeInput} />\n                  <DatePicker\n                    selected={this.state.startDate}\n                    onChange={this.handleChange}\n                    monthsShown={1}\n                    inline\n                    title='Deadline'\n                    placeholderText='Deadline'\n                  />\n                </ModalBody>\n                <ModalFooter>\n                  <div className='fix-box-color'>\n                    <Button color='danger' className='fix-box-item' id='red' onClick={this.changeColor('red')} />\n                    <Button color='info' className='fix-box-item' id='blue' onClick={this.changeColor('blue')} />\n                    <Button color='warning' className='fix-box-item' id='yellow' onClick={this.changeColor('yellow')} />\n                    <Button color='success' className='fix-box-item' id='green' onClick={this.changeColor('green')} />\n                  </div>\n                  {/* <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button> */}\n                  <Button color=\"primary\" onClick={this.addToStroy}>Save</Button>\n                </ModalFooter>\n              </Modal>\n\n\n            </div>\n\n            <div className='col-md-4 offset-md-1'>\n              <button className='col-md-6'>\n                <img src={process.env.PUBLIC_URL + '/assets/img/group.png'} alt='' />\n                <div className='inner-text-of-button-header'>User</div>\n              </button>\n            </div>\n\n            <div className='col-md-3 offset-md-1'>\n              <input className='col-md-6' placeholder='Search your task' />\n            </div>\n          </header>\n        </div>\n\n        <div className='row'>\n          <div className='col-md-2 border-right border-bottom fix'>\n            Story\n          </div>\n          <div className='col-md-2 border-right border-bottom fix'>\n            ToDo\n          </div>\n          <div className='col-md-4 border-right border-bottom fix'>\n            In Progress\n          </div>\n          <div className='col-md-2 border-right border-bottom fix'>\n            Test\n          </div>\n          <div className='col-md-2 border-bottom fix'>\n            Done\n          </div>\n        </div>\n\n        <div className='row full-height'>\n          {/* Story List */}\n          <div className='col-md-2 border-right'>\n            <Col md={12} className='mt-4'>\n              <ListGroup>\n                {\n                  listStory.length !== 0 ?\n                    listStory.map((item, index) => {\n                      return (\n                        <ListGroupItem key={index} className={taskUlClass} style={{ backgroundColor: this.state.bgColor }}>\n                          <header className='col-md-12'>\n                            <p>{JSON.parse(item).title}</p>\n                            <button\n                              onClick={this.delStory.bind(this, index)}\n                              className='float-right li-button-fix'\n                            >\n                              <img src={process.env.PUBLIC_URL + '/assets/img/cancel.png'} alt='' />\n                            </button>\n                            <button\n                              onClick={this.addToListTodo.bind(this, item)}\n                              className='float-right li-button-fix'\n                            >\n                              <img src={process.env.PUBLIC_URL + '/assets/img/check.png'} alt='' />\n                            </button>\n                          </header>\n                          <Col xs={12}>\n                            <p>{JSON.parse(item).Description}</p>\n                          </Col>\n                        </ListGroupItem>\n                      )\n                    })\n                    :\n                    (\n                      console.log('Empty Task')\n                    )\n                }\n              </ListGroup>\n            </Col>\n          </div>\n          <div className='col-md-2 border-right'>\n            <Col md={12} className='mt-4'>\n              <ListGroup>\n                {\n                  listTodo.length !== 0 ?\n                    listTodo.map((item, index) => {\n                      return (\n                        <ListGroupItem key={index} className={taskUlClass}>\n                          <header className='col-md-12'>\n                            <p>{JSON.parse(item).title}</p>\n                            <button\n                              onClick={this.delTodo.bind(this, index)}\n                              className='float-right li-button-fix'\n                              color='danger'\n                            >\n                              <img src={process.env.PUBLIC_URL + '/assets/img/cancel.png'} alt='' />\n                            </button>\n                            <button\n                              onClick={this.addToListInprogress.bind(this, item)}\n                              className='float-right li-button-fix'\n                              color='danger'\n                            >\n                              <img src={process.env.PUBLIC_URL + '/assets/img/check.png'} alt='' />\n                            </button>\n                          </header>\n                          <Col xs={12}>\n                            <p>{JSON.parse(item).Description}</p>\n                          </Col>\n                        </ListGroupItem>\n                      )\n                    })\n                    :\n                    (\n                      console.log('Empty Task')\n                    )\n                }\n              </ListGroup>\n            </Col>\n          </div>\n          <div className='col-md-4 border-right'>\n            <Col md={12} className='mt-4'>\n              <ListGroup>\n                {\n                  listInProgress.length !== 0 ?\n                    listInProgress.map((item, index) => {\n                      return (\n                        <ListGroupItem key={index} className={taskUlClass}>\n                          <header className='col-md-12'>\n                            <p>{JSON.parse(item).title}</p>\n                            <button\n                              onClick={this.delInProgress.bind(this, index)}\n                              className='float-right li-button-fix'\n                              color='danger'\n                            >\n                              <img src={process.env.PUBLIC_URL + '/assets/img/cancel.png'} alt='' />\n                            </button>\n                            <button\n                              onClick={this.addToListTest.bind(this, item)}\n                              className='float-right li-button-fix'\n                              color='danger'\n                            >\n                              <img src={process.env.PUBLIC_URL + '/assets/img/check.png'} alt='' />\n                            </button>\n                          </header>\n                          <Col xs={12}>\n                            <p>{JSON.parse(item).Description}</p>\n                          </Col>\n                        </ListGroupItem>\n                      )\n                    })\n                    :\n                    (\n                      console.log('Empty Task')\n                    )\n                }\n              </ListGroup>\n            </Col>\n          </div>\n          <div className='col-md-2 border-right'>\n            <Col md={12} className='mt-4'>\n              <ListGroup>\n                {\n                  listTest.length !== 0 ?\n                    listTest.map((item, index) => {\n                      return (\n                        <ListGroupItem key={index} className={taskUlClass}>\n                          <header className='col-md-12'>\n                            <p>{JSON.parse(item).title}</p>\n                            <button\n                              onClick={this.delTest.bind(this, index)}\n                              className='float-right li-button-fix'\n                              color='danger'\n                            >\n                              <img src={process.env.PUBLIC_URL + '/assets/img/cancel.png'} alt='' />\n                            </button>\n                            <button\n                              onClick={this.addToListDone.bind(this, item)}\n                              className='float-right li-button-fix'\n                              color='danger'\n                            >\n                              <img src={process.env.PUBLIC_URL + '/assets/img/check.png'} alt='' />\n                            </button>\n                          </header>\n                          <Col xs={12}>\n                            <p>{JSON.parse(item).Description}</p>\n                          </Col>\n                        </ListGroupItem>\n                      )\n                    })\n                    :\n                    (\n                      console.log('Empty Task')\n                    )\n                }\n              </ListGroup>\n            </Col>\n          </div>\n          <div className='col-md-2'>\n            <Col md={12} className='mt-4'>\n              <ListGroup>\n                {\n                  listDone.length !== 0 ?\n                    listDone.map((item, index) => {\n                      return (\n                        <ListGroupItem key={index} className={taskUlClass}>\n                          <header className='col-md-12'>\n                            <p>{JSON.parse(item).title}</p>\n                            <button\n                              onClick={this.delDone.bind(this, index)}\n                              className='float-right li-button-fix'\n                              color='danger'\n                            >\n                              <img src={process.env.PUBLIC_URL + '/assets/img/cancel.png'} alt='' />\n                            </button>\n                            <button\n                              onClick={this.addToListDone.bind(this, item)}\n                              className='float-right li-button-fix'\n                              color='danger'\n                            >\n                              <img src={process.env.PUBLIC_URL + '/assets/img/check.png'} alt='' />\n                            </button>\n                          </header>\n                          <Col xs={12}>\n                            <p>{JSON.parse(item).Description}</p>\n                          </Col>\n                        </ListGroupItem>\n                      )\n                    })\n                    :\n                    (\n                      console.log('Empty Task')\n                    )\n                }\n              </ListGroup>\n            </Col>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}